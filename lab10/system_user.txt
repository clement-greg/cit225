SQL> 
SQL> -- Set SQL*Plus environmnet variables.
SQL> SET ECHO ON
SQL> SET FEEDBACK ON
SQL> SET NULL '<Null>'
SQL> SET PAGESIZE 999
SQL> SET SERVEROUTPUT ON SIZE UNLIMITED
SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Create and assign bind variable for table name.
SQL> -- ------------------------------------------------------------------
SQL> VARIABLE table_name     VARCHAR2(30)
SQL> 
SQL> BEGIN
SQL>   :table_name := UPPER('system_user');
SQL> END;
SQL> /

PL/SQL procedure successfully completed.

SQL> 
SQL> --  Verify table name.
SQL> SELECT :table_name FROM dual;

:TABLE_NAME                                                                                        
--------------------------------                                                                   
SYSTEM_USER                                                                                        

1 row selected.

SQL> 
SQL> -- ------------------------------------------------------------------
SQL> --  Conditionally drop table.
SQL> -- ------------------------------------------------------------------
SQL> DECLARE
SQL>   /* Dynamic cursor. */
SQL>   CURSOR c (cv_object_name VARCHAR2) IS
SQL> 	 SELECT o.object_type
SQL> 	 ,	o.object_name
SQL> 	 FROM	user_objects o
SQL> 	 WHERE	o.object_name LIKE UPPER(cv_object_name||'%');
SQL> BEGIN
SQL>   FOR i IN c(:table_name) LOOP
SQL> 	 IF i.object_type = 'SEQUENCE' THEN
SQL> 	   EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name;
SQL> 	 ELSIF i.object_type = 'TABLE' THEN
SQL> 	   EXECUTE IMMEDIATE 'DROP '||i.object_type||' '||i.object_name||' CASCADE CONSTRAINTS';
SQL> 	 END IF;
SQL>   END LOOP;
SQL> END;
SQL> /

PL/SQL procedure successfully completed.

SQL> 
SQL> -- Create table.
SQL> CREATE TABLE system_user
SQL> ( system_user_id		   NUMBER
SQL> , system_user_name 	   VARCHAR2(20) CONSTRAINT nn_system_user_1 NOT NULL
SQL> , system_user_group_id	   NUMBER	CONSTRAINT nn_system_user_2 NOT NULL
SQL> , system_user_type 	   NUMBER	CONSTRAINT nn_system_user_3 NOT NULL
SQL> , first_name		   VARCHAR2(20)
SQL> , middle_name		   VARCHAR2(20)
SQL> , last_name		   VARCHAR2(20)
SQL> , created_by		   NUMBER	CONSTRAINT nn_system_user_4 NOT NULL
SQL> , creation_date		   DATE 	CONSTRAINT nn_system_user_5 NOT NULL
SQL> , last_updated_by		   NUMBER	CONSTRAINT nn_system_user_6 NOT NULL
SQL> , last_update_date 	   DATE 	CONSTRAINT nn_system_user_7 NOT NULL
SQL> , CONSTRAINT pk_system_user_1 PRIMARY KEY(system_user_id)
SQL> , CONSTRAINT fk_system_user_1 FOREIGN KEY(created_by) REFERENCES system_user(system_user_id)
SQL> , CONSTRAINT fk_system_user_2 FOREIGN KEY(last_updated_by) REFERENCES system_user(system_user_id));

Table created.

SQL> 
SQL> -- Display the table organization.
SQL> SET NULL ''
SQL> COLUMN table_name	 FORMAT A16
SQL> COLUMN column_id	 FORMAT 9999
SQL> COLUMN column_name  FORMAT A22
SQL> COLUMN data_type	 FORMAT A12
SQL> SELECT   table_name
SQL> ,	      column_id
SQL> ,	      column_name
SQL> ,	      CASE
SQL> 		WHEN nullable = 'N' THEN 'NOT NULL'
SQL> 		ELSE ''
SQL> 	      END AS nullable
SQL> ,	      CASE
SQL> 		WHEN data_type IN ('CHAR','VARCHAR2','NUMBER') THEN
SQL> 		  data_type||'('||data_length||')'
SQL> 		ELSE
SQL> 		  data_type
SQL> 	      END AS data_type
SQL> FROM     user_tab_columns
SQL> WHERE    table_name = :table_name
SQL> ORDER BY 2;

TABLE NAME       COLUMN_ID COLUMN NAME            NULLABLE DATA_TYPE                               
---------------- --------- ---------------------- -------- ------------                            
SYSTEM_USER              1 SYSTEM_USER_ID         NOT NULL NUMBER(22)                              
SYSTEM_USER              2 SYSTEM_USER_NAME       NOT NULL VARCHAR2(20)                            
SYSTEM_USER              3 SYSTEM_USER_GROUP_ID   NOT NULL NUMBER(22)                              
SYSTEM_USER              4 SYSTEM_USER_TYPE       NOT NULL NUMBER(22)                              
SYSTEM_USER              5 FIRST_NAME                      VARCHAR2(20)                            
SYSTEM_USER              6 MIDDLE_NAME                     VARCHAR2(20)                            
SYSTEM_USER              7 LAST_NAME                       VARCHAR2(20)                            
SYSTEM_USER              8 CREATED_BY             NOT NULL NUMBER(22)                              
SYSTEM_USER              9 CREATION_DATE          NOT NULL DATE                                    
SYSTEM_USER             10 LAST_UPDATED_BY        NOT NULL NUMBER(22)                              
SYSTEM_USER             11 LAST_UPDATE_DATE       NOT NULL DATE                                    

11 rows selected.

SQL> 
SQL> -- Display non-unique constraints.
SQL> COLUMN constraint_name   FORMAT A22
SQL> COLUMN search_condition  FORMAT A36
SQL> COLUMN constraint_type   FORMAT A1
SQL> SELECT   uc.constraint_name
SQL> ,	      uc.search_condition
SQL> ,	      uc.constraint_type
SQL> FROM     user_constraints uc INNER JOIN user_cons_columns ucc
SQL> ON       uc.table_name = ucc.table_name
SQL> AND      uc.constraint_name = ucc.constraint_name
SQL> WHERE    uc.table_name = :table_name
SQL> AND      uc.constraint_type = UPPER('c')
SQL> ORDER BY uc.constraint_name;

                                                            C                                      
CONSTRAINT NAME        SEARCH_CONDITION                     T                                      
---------------------- ------------------------------------ -                                      
NN_SYSTEM_USER_1       "SYSTEM_USER_NAME" IS NOT NULL       C                                      
NN_SYSTEM_USER_2       "SYSTEM_USER_GROUP_ID" IS NOT NULL   C                                      
NN_SYSTEM_USER_3       "SYSTEM_USER_TYPE" IS NOT NULL       C                                      
NN_SYSTEM_USER_4       "CREATED_BY" IS NOT NULL             C                                      
NN_SYSTEM_USER_5       "CREATION_DATE" IS NOT NULL          C                                      
NN_SYSTEM_USER_6       "LAST_UPDATED_BY" IS NOT NULL        C                                      
NN_SYSTEM_USER_7       "LAST_UPDATE_DATE" IS NOT NULL       C                                      

7 rows selected.

SQL> 
SQL> -- Display foreign key constraints.
SQL> COL constraint_source FORMAT A38 HEADING "Constraint Name:| Table.Column"
SQL> COL references_column FORMAT A40 HEADING "References:| Table.Column"
SQL> SELECT   uc.constraint_name||CHR(10)
SQL> ||      '('||ucc1.table_name||'.'||ucc1.column_name||')' constraint_source
SQL> ,	     'REFERENCES'||CHR(10)
SQL> ||      '('||ucc2.table_name||'.'||ucc2.column_name||')' references_column
SQL> FROM     user_constraints uc
SQL> ,	      user_cons_columns ucc1
SQL> ,	      user_cons_columns ucc2
SQL> WHERE    uc.constraint_name = ucc1.constraint_name
SQL> AND      uc.r_constraint_name = ucc2.constraint_name
SQL> AND      ucc1.position = ucc2.position -- Correction for multiple column primary keys.
SQL> AND      uc.constraint_type = 'R'
SQL> AND      ucc1.table_name = :table_name
SQL> ORDER BY ucc1.table_name
SQL> ,	      uc.constraint_name;

Constraint Name:                       References:                                                 
 Table.Column                           Table.Column                                               
-------------------------------------- ----------------------------------------                    
FK_SYSTEM_USER_1                       REFERENCES                                                  
(SYSTEM_USER.CREATED_BY)               (SYSTEM_USER.SYSTEM_USER_ID)                                
                                                                                                   
FK_SYSTEM_USER_2                       REFERENCES                                                  
(SYSTEM_USER.LAST_UPDATED_BY)          (SYSTEM_USER.SYSTEM_USER_ID)                                
                                                                                                   

2 rows selected.

SQL> 
SQL> -- Create unique index.
SQL> CREATE UNIQUE INDEX uq_system_user_1
SQL>   ON system_user (system_user_name);

Index created.

SQL> 
SQL> -- Display unique indexes.
SQL> COLUMN index_name FORMAT A20 HEADING "Index Name"
SQL> SELECT   index_name
SQL> FROM     user_indexes
SQL> WHERE    table_name = :table_name;

Index Name                                                                                         
--------------------                                                                               
PK_SYSTEM_USER_1                                                                                   
UQ_SYSTEM_USER_1                                                                                   

2 rows selected.

SQL> 
SQL> -- Create sequence.
SQL> CREATE SEQUENCE system_user_s1 START WITH 1001 NOCACHE;

Sequence created.

SQL> 
SQL> -- Display sequence.
SQL> COLUMN sequence_name FORMAT A20 HEADING "Sequence Name"
SQL> SELECT   sequence_name
SQL> FROM     user_sequences
SQL> WHERE    sequence_name = :table_name||'_S1';

Sequence Name                                                                                      
--------------------                                                                               
SYSTEM_USER_S1                                                                                     

1 row selected.

SQL> 
SQL> -- Close the log file.
SQL> SPOOL OFF
